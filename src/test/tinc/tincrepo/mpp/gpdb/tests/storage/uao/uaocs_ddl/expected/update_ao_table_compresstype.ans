-- @description : update UAO tables , with various compression type
-- 
-- create select uao table with compress=None 
Drop table if exists uao_tab_compress_none_upd cascade;
DROP TABLE
CREATE TABLE uao_tab_compress_none_upd (      
          col_int int,
          col_text text,
          col_numeric numeric)
 with (appendonly=true, orientation=column , COMPRESSTYPE=NONE ) ; 
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'col_int' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE index col_int_bmp_idx_compress_upd_none on uao_tab_compress_none_upd using bitmap (col_int);
CREATE INDEX
\d+ uao_tab_compress_none_upd
                         Append-Only Columnar Table "public.uao_tab_compress_none_upd"
   Column    |  Type   | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
-------------+---------+-----------+----------+------------------+-------------------+------------+-------------
 col_int     | integer |           | plain    | none             | 0                 | 32768      | 
 col_text    | text    |           | extended | none             | 0                 | 32768      | 
 col_numeric | numeric |           | main     | none             | 0                 | 32768      | 
Checksum: f
Indexes:
    "col_int_bmp_idx_compress_upd_none" bitmap (col_int)
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=none
Distributed by: (col_int)

select count(*) from uao_tab_compress_none_upd;
 count 
-------
     0
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_compress_none_upd');
 visimappresent 
----------------
              1
(1 row)

insert into uao_tab_compress_none_upd values(1,'val1',100);
INSERT 0 1
insert into uao_tab_compress_none_upd values(2,'val2',200);
INSERT 0 1
insert into uao_tab_compress_none_upd values(3,'val3',300);
INSERT 0 1
select *  from uao_tab_compress_none_upd order by col_int,col_text;
 col_int | col_text | col_numeric 
---------+----------+-------------
       1 | val1     |         100
       2 | val2     |         200
       3 | val3     |         300
(3 rows)

update uao_tab_compress_none_upd set col_text=col_text||' new value' where col_int = 1;
UPDATE 1
select *  from uao_tab_compress_none_upd order by col_int,col_text;
 col_int |    col_text    | col_numeric 
---------+----------------+-------------
       1 | val1 new value |         100
       2 | val2           |         200
       3 | val3           |         300
(3 rows)

select count(*) AS only_visi_tups  from uao_tab_compress_none_upd ;
 only_visi_tups 
----------------
              3
(1 row)

set gp_select_invisible = true;
SET
select count(*) AS invisi_and_visi_tups  from uao_tab_compress_none_upd ;
 invisi_and_visi_tups 
----------------------
                    4
(1 row)

select *  from uao_tab_compress_none_upd order by col_int,col_text;
 col_int |    col_text    | col_numeric 
---------+----------------+-------------
       1 | val1           |         100
       1 | val1 new value |         100
       2 | val2           |         200
       3 | val3           |         300
(4 rows)

set gp_select_invisible = false;
SET
-- create select uao table with compress=zlib COMPRESSLEVEL=1 
Drop table if exists uao_tab_compress_zlib1_upd cascade;
DROP TABLE
CREATE TABLE uao_tab_compress_zlib1_upd (
          col_int int,
          col_text text,
          col_numeric numeric)
 with (appendonly=true, orientation=column , COMPRESSTYPE=zlib, COMPRESSLEVEL=1  ); 
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'col_int' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE index col_int_bmp_idx_compress_upd_zlib1 on uao_tab_compress_zlib1_upd using bitmap (col_int);
CREATE INDEX
\d+ uao_tab_compress_zlib1_upd
                         Append-Only Columnar Table "public.uao_tab_compress_zlib1_upd"
   Column    |  Type   | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
-------------+---------+-----------+----------+------------------+-------------------+------------+-------------
 col_int     | integer |           | plain    | zlib             | 1                 | 32768      | 
 col_text    | text    |           | extended | zlib             | 1                 | 32768      | 
 col_numeric | numeric |           | main     | zlib             | 1                 | 32768      | 
Checksum: f
Indexes:
    "col_int_bmp_idx_compress_upd_zlib1" bitmap (col_int)
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=zlib, compresslevel=1
Distributed by: (col_int)

select count(*) from uao_tab_compress_zlib1_upd;
 count 
-------
     0
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_compress_zlib1_upd');
 visimappresent 
----------------
              1
(1 row)

SELECT 1 AS compression_present from pg_appendonly WHERE compresstype='zlib' AND compresslevel=1 AND relid=(SELECT oid  FROM pg_class WHERE relname='uao_tab_compress_zlib1_upd');
 compression_present 
---------------------
                   1
(1 row)

insert into uao_tab_compress_zlib1_upd values(1,'val1',100);
INSERT 0 1
insert into uao_tab_compress_zlib1_upd values(2,'val2',200);
INSERT 0 1
insert into uao_tab_compress_zlib1_upd values(3,'val3',300);
INSERT 0 1
select *  from uao_tab_compress_zlib1_upd order by col_int, col_text;
 col_int | col_text | col_numeric 
---------+----------+-------------
       1 | val1     |         100
       2 | val2     |         200
       3 | val3     |         300
(3 rows)

update uao_tab_compress_zlib1_upd set col_text=col_text||' new value' where col_int = 1;
UPDATE 1
select *  from uao_tab_compress_zlib1_upd order by col_int, col_text;
 col_int |    col_text    | col_numeric 
---------+----------------+-------------
       1 | val1 new value |         100
       2 | val2           |         200
       3 | val3           |         300
(3 rows)

select count(*) AS only_visi_tups  from uao_tab_compress_zlib1_upd ;
 only_visi_tups 
----------------
              3
(1 row)

set gp_select_invisible = true;
SET
select count(*) AS invisi_and_visi_tups  from uao_tab_compress_zlib1_upd ;
 invisi_and_visi_tups 
----------------------
                    4
(1 row)

select *  from uao_tab_compress_zlib1_upd order by col_int,col_text;
 col_int |    col_text    | col_numeric 
---------+----------------+-------------
       1 | val1           |         100
       1 | val1 new value |         100
       2 | val2           |         200
       3 | val3           |         300
(4 rows)

set gp_select_invisible = false;
SET
-- create select uao table with compress=zlib COMPRESSLEVEL=9 
Drop table if exists uao_tab_compress_zlib9_upd cascade;
DROP TABLE
CREATE TABLE uao_tab_compress_zlib9_upd (
          col_int int,
          col_text text,
          col_numeric numeric)
 with (appendonly=true, orientation=column , COMPRESSTYPE=zlib, COMPRESSLEVEL=9  );   
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'col_int' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE index col_int_bmp_idx_compress_upd_zlib9 on uao_tab_compress_zlib9_upd using bitmap (col_int);
CREATE INDEX
\d+ uao_tab_compress_zlib9_upd
                         Append-Only Columnar Table "public.uao_tab_compress_zlib9_upd"
   Column    |  Type   | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
-------------+---------+-----------+----------+------------------+-------------------+------------+-------------
 col_int     | integer |           | plain    | zlib             | 9                 | 32768      | 
 col_text    | text    |           | extended | zlib             | 9                 | 32768      | 
 col_numeric | numeric |           | main     | zlib             | 9                 | 32768      | 
Checksum: f
Indexes:
    "col_int_bmp_idx_compress_upd_zlib9" bitmap (col_int)
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=zlib, compresslevel=9
Distributed by: (col_int)

select count(*) from uao_tab_compress_zlib9_upd;
 count 
-------
     0
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_compress_zlib9_upd');
 visimappresent 
----------------
              1
(1 row)

SELECT 1 AS compression_present from pg_appendonly WHERE compresstype='zlib' AND compresslevel=9 AND relid=(SELECT oid  FROM pg_class WHERE relname='uao_tab_compress_zlib9_upd');
 compression_present 
---------------------
                   1
(1 row)

insert into uao_tab_compress_zlib9_upd values(1,'val1',100);
INSERT 0 1
insert into uao_tab_compress_zlib9_upd values(2,'val2',200);
INSERT 0 1
insert into uao_tab_compress_zlib9_upd values(3,'val3',300);
INSERT 0 1
select *  from uao_tab_compress_zlib9_upd order by col_int,col_text;
 col_int | col_text | col_numeric 
---------+----------+-------------
       1 | val1     |         100
       2 | val2     |         200
       3 | val3     |         300
(3 rows)

update uao_tab_compress_zlib9_upd set col_text=col_text||' new value' where col_int = 1;
UPDATE 1
select *  from uao_tab_compress_zlib9_upd order by col_int,col_text;
 col_int |    col_text    | col_numeric 
---------+----------------+-------------
       1 | val1 new value |         100
       2 | val2           |         200
       3 | val3           |         300
(3 rows)

select count(*) AS only_visi_tups  from uao_tab_compress_zlib9_upd ;
 only_visi_tups 
----------------
              3
(1 row)

set gp_select_invisible = true;
SET
select count(*) AS invisi_and_visi_tups  from uao_tab_compress_zlib9_upd ;
 invisi_and_visi_tups 
----------------------
                    4
(1 row)

select *  from uao_tab_compress_zlib9_upd order by col_int,col_text;
 col_int |    col_text    | col_numeric 
---------+----------------+-------------
       1 | val1           |         100
       1 | val1 new value |         100
       2 | val2           |         200
       3 | val3           |         300
(4 rows)

set gp_select_invisible = false;
SET
-- create select uao table with compress=QuickLZ 
Drop table if exists uao_tab_compress_quicklz_upd cascade;
DROP TABLE
CREATE TABLE uao_tab_compress_quicklz_upd (
          col_int int,
          col_text text,
          col_numeric numeric)
 with (appendonly=true, orientation=column , COMPRESSTYPE=quicklz , COMPRESSLEVEL=1  ) ; 
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'col_int' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE index col_int_bmp_idx_compress_upd_quicklz on uao_tab_compress_quicklz_upd using bitmap (col_int);
CREATE INDEX
\d+ uao_tab_compress_quicklz_upd
                        Append-Only Columnar Table "public.uao_tab_compress_quicklz_upd"
   Column    |  Type   | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
-------------+---------+-----------+----------+------------------+-------------------+------------+-------------
 col_int     | integer |           | plain    | quicklz          | 1                 | 32768      | 
 col_text    | text    |           | extended | quicklz          | 1                 | 32768      | 
 col_numeric | numeric |           | main     | quicklz          | 1                 | 32768      | 
Checksum: f
Indexes:
    "col_int_bmp_idx_compress_upd_quicklz" bitmap (col_int)
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=quicklz, compresslevel=1
Distributed by: (col_int)

select count(*) from uao_tab_compress_quicklz_upd;
 count 
-------
     0
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_compress_quicklz_upd');
 visimappresent 
----------------
              1
(1 row)

SELECT 1 AS compression_present from pg_appendonly WHERE compresstype='quicklz' AND compresslevel=1 AND relid=(SELECT oid  FROM pg_class WHERE relname='uao_tab_compress_quicklz_upd');
 compression_present 
---------------------
                   1
(1 row)

insert into uao_tab_compress_quicklz_upd values(1,'val1',100);
INSERT 0 1
insert into uao_tab_compress_quicklz_upd values(2,'val2',200);
INSERT 0 1
insert into uao_tab_compress_quicklz_upd values(3,'val3',300);
INSERT 0 1
select *  from uao_tab_compress_quicklz_upd order by col_int,col_text;
 col_int | col_text | col_numeric 
---------+----------+-------------
       1 | val1     |         100
       2 | val2     |         200
       3 | val3     |         300
(3 rows)

update uao_tab_compress_quicklz_upd set col_text=col_text||' new value' where col_int = 1;
UPDATE 1
select *  from uao_tab_compress_quicklz_upd order by col_int,col_text;
 col_int |    col_text    | col_numeric 
---------+----------------+-------------
       1 | val1 new value |         100
       2 | val2           |         200
       3 | val3           |         300
(3 rows)

select count(*) AS only_visi_tups  from uao_tab_compress_quicklz_upd ;
 only_visi_tups 
----------------
              3
(1 row)

set gp_select_invisible = true;
SET
select count(*) AS invisi_and_visi_tups  from uao_tab_compress_quicklz_upd ;
 invisi_and_visi_tups 
----------------------
                    4
(1 row)

select *  from uao_tab_compress_quicklz_upd order by col_int,col_text;
 col_int |    col_text    | col_numeric 
---------+----------------+-------------
       1 | val1           |         100
       1 | val1 new value |         100
       2 | val2           |         200
       3 | val3           |         300
(4 rows)

set gp_select_invisible = false;
SET

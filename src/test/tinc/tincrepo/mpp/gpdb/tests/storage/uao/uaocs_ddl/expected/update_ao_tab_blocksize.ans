-- @description : update UAO tables , with different blocksize
-- 
-- create select uao table with BLOCKSIZE=8K 
DROP TABLE IF EXISTS uao_tab_blocksize_upd_8k cascade;
DROP TABLE
CREATE TABLE uao_tab_blocksize_upd_8k  with (appendonly=true, orientation=column , BLOCKSIZE=8192 )  AS (
SELECT GENERATE_SERIES::numeric sno
     , (random() * 10000000)::numeric + 10000000 val1
     , timeofday()::varchar(50) val2
     , (random() * 5000)::bigint + 10000000 val3
     , (random() * 10000000)::numeric + 10000000 val4
     , (random() * 10000000)::numeric + 10000000 val5	
  FROM GENERATE_SERIES(10000, 19999)
) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'sno' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 10000
CREATE index val3_bmp_idxblocksize_upd_8k on uao_tab_blocksize_upd_8k using bitmap (val3);
CREATE INDEX
\d+ uao_tab_blocksize_upd_8k 
                              Append-Only Columnar Table "public.uao_tab_blocksize_upd_8k"
 Column |         Type          | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------+-----------+----------+------------------+-------------------+------------+-------------
 sno    | numeric               |           | main     | none             | 0                 | 8192       | 
 val1   | numeric               |           | main     | none             | 0                 | 8192       | 
 val2   | character varying(50) |           | extended | none             | 0                 | 8192       | 
 val3   | bigint                |           | plain    | none             | 0                 | 8192       | 
 val4   | numeric               |           | main     | none             | 0                 | 8192       | 
 val5   | numeric               |           | main     | none             | 0                 | 8192       | 
Checksum: f
Indexes:
    "val3_bmp_idxblocksize_upd_8k" bitmap (val3)
Has OIDs: no
Options: appendonly=true, orientation=column, blocksize=8192
Distributed by: (sno)

SELECT count(*) from uao_tab_blocksize_upd_8k;
 count 
-------
 10000
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_blocksize_upd_8k');
 visimappresent 
----------------
              1
(1 row)

select 1 as block8k_present from pg_appendonly WHERE   blocksize=8192 AND relid=(SELECT oid  FROM pg_class WHERE relname='uao_tab_blocksize_upd_8k');
 block8k_present 
-----------------
               1
(1 row)

update  uao_tab_blocksize_upd_8k set val2 = 'new_val' where sno = 10000;
UPDATE 1
select count(*) AS only_visi_tups  from uao_tab_blocksize_upd_8k;
 only_visi_tups 
----------------
          10000
(1 row)

set gp_select_invisible = true;
SET
select count(*) AS invisi_and_visi_tups  from uao_tab_blocksize_upd_8k;
 invisi_and_visi_tups 
----------------------
                10001
(1 row)

set gp_select_invisible = false;
SET
-- create select uao table with BLOCKSIZE=2048K 
DROP TABLE IF EXISTS uao_tab_blocksize_upd_2048k cascade;
DROP TABLE
CREATE TABLE uao_tab_blocksize_upd_2048k  with (appendonly=true, orientation=column , BLOCKSIZE=2097152 )  AS (
SELECT GENERATE_SERIES::numeric sno
     , (random() * 10000000)::numeric + 10000000 val1
     , timeofday()::varchar(50) val2
     , (random() * 5000)::bigint + 10000000 val3
     , (random() * 10000000)::numeric + 10000000 val4
     , (random() * 10000000)::numeric + 10000000 val5	
  FROM GENERATE_SERIES(10000, 19999)
) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'sno' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 10000
CREATE index val3_bmp_idxblocksize_upd_2048k on uao_tab_blocksize_upd_2048k using bitmap (val3);
CREATE INDEX
\d+ uao_tab_blocksize_upd_2048k 
                             Append-Only Columnar Table "public.uao_tab_blocksize_upd_2048k"
 Column |         Type          | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------+-----------+----------+------------------+-------------------+------------+-------------
 sno    | numeric               |           | main     | none             | 0                 | 2097152    | 
 val1   | numeric               |           | main     | none             | 0                 | 2097152    | 
 val2   | character varying(50) |           | extended | none             | 0                 | 2097152    | 
 val3   | bigint                |           | plain    | none             | 0                 | 2097152    | 
 val4   | numeric               |           | main     | none             | 0                 | 2097152    | 
 val5   | numeric               |           | main     | none             | 0                 | 2097152    | 
Checksum: f
Indexes:
    "val3_bmp_idxblocksize_upd_2048k" bitmap (val3)
Has OIDs: no
Options: appendonly=true, orientation=column, blocksize=2097152
Distributed by: (sno)

SELECT count(*) from uao_tab_blocksize_upd_2048k;
 count 
-------
 10000
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_blocksize_upd_2048k');
 visimappresent 
----------------
              1
(1 row)

select 1 as block2048k_present from pg_appendonly WHERE   blocksize=2097152 AND relid=(SELECT oid  FROM pg_class WHERE relname='uao_tab_blocksize_upd_2048k');
 block2048k_present 
--------------------
                  1
(1 row)

update  uao_tab_blocksize_upd_2048k set val2 = 'new_val' where sno = 10000;
UPDATE 1
select count(*) AS only_visi_tups  from uao_tab_blocksize_upd_2048k;
 only_visi_tups 
----------------
          10000
(1 row)

set gp_select_invisible = true;
SET
select count(*) AS invisi_and_visi_tups  from uao_tab_blocksize_upd_2048k;
 invisi_and_visi_tups 
----------------------
                10001
(1 row)

set gp_select_invisible = false;
SET
-- create select uao table with BLOCKSIZE=default
DROP TABLE IF EXISTS uao_tab_blocksize_upd_default cascade;
DROP TABLE
CREATE TABLE uao_tab_blocksize_upd_default with (appendonly=true, orientation=column)  AS (
SELECT GENERATE_SERIES::numeric sno
     , (random() * 10000000)::numeric + 10000000 val1
     , timeofday()::varchar(50) val2
     , (random() * 5000)::bigint + 10000000 val3
     , (random() * 10000000)::numeric + 10000000 val4
     , (random() * 10000000)::numeric + 10000000 val5	
  FROM GENERATE_SERIES(10000, 19999)
) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'sno' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 10000
CREATE index val3_bmp_idxblocksize_upd_default on uao_tab_blocksize_upd_default using bitmap (val3);
CREATE INDEX
\d+ uao_tab_blocksize_upd_default 
                            Append-Only Columnar Table "public.uao_tab_blocksize_upd_default"
 Column |         Type          | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------+-----------+----------+------------------+-------------------+------------+-------------
 sno    | numeric               |           | main     | none             | 0                 | 32768      | 
 val1   | numeric               |           | main     | none             | 0                 | 32768      | 
 val2   | character varying(50) |           | extended | none             | 0                 | 32768      | 
 val3   | bigint                |           | plain    | none             | 0                 | 32768      | 
 val4   | numeric               |           | main     | none             | 0                 | 32768      | 
 val5   | numeric               |           | main     | none             | 0                 | 32768      | 
Checksum: f
Indexes:
    "val3_bmp_idxblocksize_upd_default" bitmap (val3)
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (sno)

SELECT count(*) from uao_tab_blocksize_upd_default;
 count 
-------
 10000
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_blocksize_upd_default');
 visimappresent 
----------------
              1
(1 row)

select 1 as blockdefault_present from pg_appendonly WHERE   blocksize=32768 AND relid=(SELECT oid  FROM pg_class WHERE relname='uao_tab_blocksize_upd_default');
 blockdefault_present 
----------------------
                    1
(1 row)

update  uao_tab_blocksize_upd_default set val2 = 'new_val' where sno = 10000;
UPDATE 1
select count(*) AS only_visi_tups  from uao_tab_blocksize_upd_default;
 only_visi_tups 
----------------
          10000
(1 row)

set gp_select_invisible = true;
SET
select count(*) AS invisi_and_visi_tups  from uao_tab_blocksize_upd_default;
 invisi_and_visi_tups 
----------------------
                10001
(1 row)

set gp_select_invisible = false;
SET

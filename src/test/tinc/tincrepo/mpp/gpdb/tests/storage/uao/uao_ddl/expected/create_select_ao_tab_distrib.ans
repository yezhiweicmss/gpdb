-- @description : Create Updatable AO tables , with indexes different distributions
-- 
-- create select uao table with  No distribution (hence hash distribution)
DROP TABLE IF EXISTS  uao_tab_distrib_none cascade;
DROP TABLE
CREATE TABLE uao_tab_distrib_none  with (appendonly=true )  AS (
SELECT GENERATE_SERIES::numeric sno
     , (random() * 10000000)::numeric + 10000000 val1
     , timeofday()::varchar(50) val2
     , (random() * 5000)::bigint + 10000000 val3
     , (random() * 10000000)::numeric + 10000000 val4
     , (random() * 10000000)::numeric + 10000000 val5	
  FROM GENERATE_SERIES(10000, 19999)
) ;
SELECT 10000
CREATE index val3_bmp_idx_uao_tab_distrib_none on uao_tab_distrib_none using bitmap (val3);
CREATE INDEX
\d+ uao_tab_distrib_none;
           Append-Only Table "public.uao_tab_distrib_none"
 Column |         Type          | Modifiers | Storage  | Description 
--------+-----------------------+-----------+----------+-------------
 sno    | numeric               |           | main     | 
 val1   | numeric               |           | main     | 
 val2   | character varying(50) |           | extended | 
 val3   | bigint                |           | plain    | 
 val4   | numeric               |           | main     | 
 val5   | numeric               |           | main     | 
Compression Type: None
Compression Level: 0
Block Size: 32768
Checksum: f
Indexes:
    "val3_bmp_idx_uao_tab_distrib_none" bitmap (val3)
Has OIDs: no
Options: appendonly=true
Distributed by: (sno)

SELECT count(*) AS cnt_row_distrib_none from uao_tab_distrib_none;
 cnt_row_distrib_none 
----------------------
                10000
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_distrib_none');
 visimappresent 
----------------
              1
(1 row)

-- create select uao table with  distributed by sno
DROP TABLE IF EXISTS uao_tab_distrib_key cascade;
DROP TABLE
CREATE TABLE uao_tab_distrib_key  with (appendonly=true )  AS (
SELECT GENERATE_SERIES::numeric sno
     , (random() * 10000000)::numeric + 10000000 val1
     , timeofday()::varchar(50) val2
     , (random() * 5000)::bigint + 10000000 val3
     , (random() * 10000000)::numeric + 10000000 val4
     , (random() * 10000000)::numeric + 10000000 val5	
  FROM GENERATE_SERIES(10000, 19999)
) DISTRIBUTED BY (sno) ;
SELECT 10000
CREATE index val3_bmp_idx_uao_tab_distrib_key on uao_tab_distrib_key using bitmap (val3);
CREATE INDEX
\d+ uao_tab_distrib_key;
           Append-Only Table "public.uao_tab_distrib_key"
 Column |         Type          | Modifiers | Storage  | Description 
--------+-----------------------+-----------+----------+-------------
 sno    | numeric               |           | main     | 
 val1   | numeric               |           | main     | 
 val2   | character varying(50) |           | extended | 
 val3   | bigint                |           | plain    | 
 val4   | numeric               |           | main     | 
 val5   | numeric               |           | main     | 
Compression Type: None
Compression Level: 0
Block Size: 32768
Checksum: f
Indexes:
    "val3_bmp_idx_uao_tab_distrib_key" bitmap (val3)
Has OIDs: no
Options: appendonly=true
Distributed by: (sno)

SELECT count(*) AS cnt_row_distrib_key from uao_tab_distrib_key;
 cnt_row_distrib_key 
---------------------
               10000
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_distrib_key');
 visimappresent 
----------------
              1
(1 row)

-- create select uao table with  distributed randomly
DROP TABLE IF EXISTS  uao_tab_distrib_randomly cascade;
DROP TABLE
CREATE TABLE uao_tab_distrib_randomly  with (appendonly=true )  AS (
SELECT GENERATE_SERIES::numeric sno
     , (random() * 10000000)::numeric + 10000000 val1
     , timeofday()::varchar(50) val2
     , (random() * 5000)::bigint + 10000000 val3
     , (random() * 10000000)::numeric + 10000000 val4
     , (random() * 10000000)::numeric + 10000000 val5	
  FROM GENERATE_SERIES(10000, 19999)
) DISTRIBUTED randomly ;
SELECT 10000
CREATE index val3_bmp_idx_uao_tab_distrib_randomly on uao_tab_distrib_randomly using bitmap (val3);
CREATE INDEX
\d+ uao_tab_distrib_randomly;
         Append-Only Table "public.uao_tab_distrib_randomly"
 Column |         Type          | Modifiers | Storage  | Description 
--------+-----------------------+-----------+----------+-------------
 sno    | numeric               |           | main     | 
 val1   | numeric               |           | main     | 
 val2   | character varying(50) |           | extended | 
 val3   | bigint                |           | plain    | 
 val4   | numeric               |           | main     | 
 val5   | numeric               |           | main     | 
Compression Type: None
Compression Level: 0
Block Size: 32768
Checksum: f
Indexes:
    "val3_bmp_idx_uao_tab_distrib_randomly" bitmap (val3)
Has OIDs: no
Options: appendonly=true
Distributed randomly

SELECT count(*) AS cnt_row_distrib_random from uao_tab_distrib_randomly;
 cnt_row_distrib_random 
------------------------
                  10000
(1 row)

SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='uao_tab_distrib_randomly');
 visimappresent 
----------------
              1
(1 row)

